name: Build and Deploy JAR

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        id: build
        run: ./gradlew build
        continue-on-error: false  # Fail the job if build fails

      - name: Generate version.json
        if: success()
        run: |
          BUILD_DATE=$(date -u +"%Y-%m-%d")
          BUILD_TIME=$(date -u +"%H:%M:%S")
          BUILD_DATETIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          echo "{\"build_date\":\"$BUILD_DATE\",\"build_time\":\"$BUILD_TIME\",\"build_datetime\":\"$BUILD_DATETIME\",\"repository\":\"${{ github.repository }}\",\"commit\":\"${{ github.sha }}\",\"branch\":\"${{ github.ref_name }}\"}" > version.json
          cat version.json  # Display the generated file for debugging

      - name: Upload build artifacts
        if: success()  # Only run if build is successful
        uses: actions/upload-artifact@v4
        with:
          name: soar-client-jar
          path: build/libs/*.jar

      - name: Upload to release (if release)
        if: github.event_name == 'release' && success()  # Only run on release and if build is successful
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.jar
          asset_name: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.jar
          asset_content_type: application/java-archive

      - name: Checkout target repository
        if: success() && (github.event_name == 'push' || github.event_name == 'release')  # Only run on push or release and if build is successful
        uses: actions/checkout@v4
        with:
          repository: Eatgrapes/Soar-fork_Web
          token: ${{ secrets.TARGET_REPO_TOKEN }}  # Token with write access to target repo
          path: target-repo

      - name: Copy JAR to target directory
        if: success() && (github.event_name == 'push' || github.event_name == 'release')
        run: |
          mkdir -p target-repo/Mod
          cp build/libs/soarclient-fork-8.0.0.jar target-repo/Mod/
          cp version.json target-repo/Mod/

      - name: Commit and push changes to target repository
        if: success() && (github.event_name == 'push' || github.event_name == 'release')
        run: |
          cd target-repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add Mod/soarclient-fork-8.0.0.jar
          git add Mod/version.json
          git commit -m "Update JAR file and version.json from ${{ github.repository }} build" || echo "No changes to commit"
          git push origin main
        continue-on-error: true  # Continue if no changes to commit
